%% -*- erlang -*-
%% The MIT License (MIT)
%%
%% Copyright (c) 2014-2024
%% Savin Max <mafei.198@gmail.com>
%%
%% Permission is hereby granted, free of charge, to any person obtaining a copy
%% of this software and associated documentation files (the "Software"), to deal
%% in the Software without restriction, including without limitation the rights
%% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
%% copies of the Software, and to permit persons to whom the Software is
%% furnished to do so, subject to the following conditions:
%%
%% The above copyright notice and this permission notice shall be included in all
%% copies or substantial portions of the Software.
%%
%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
%% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
%% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
%% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
%% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
%% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
%% SOFTWARE.


[
   %% Uncomment following, when use global gproc
   %% {gproc, [
   %%     {gproc_dist, all}
   %% ]},

    {lager, [
      {handlers, [
        {lager_console_backend, info},
        {lager_file_backend, [{file, "../log/error.log"},
                              {level, error},
                              {date, "$D0"},
                              {count, 7}]},
        {lager_file_backend, [{file, "../log/console.log"},
                              {level, info},
                              {date, "$D0"},
                              {count, 7}]}
      ]}
    ]},

    {sync,[

        %% growl: Desktop notifications
        %% valid values: all | none | [success | warning | error]
        %% default: all
        {growl, none},

        %% log: Console notifications
        %% valid values: all | none | [success | warnings | errors]
        %% default: all
        {log, errors},

        %% non_descendant: How to handle beams whose original source path is
        %% not a descendant of the current working directory.
        %%
        %% valid values: fix | allow | ignore
        %% * fix = attempt to find source files under current directory
        %% * allow = don't do anything special, use the non-descendant path and
        %%   watch that file
        %% * ignore = don't watch that module at all and ignore any changes to
        %%   its source path
        %% default: fix
        {non_descendant, fix},

        %% excluded_modules: Ignore any modules listed
        %% default: []
        {excluded_modules, [mtwist]},

        %{included_apps, [game_server]},

        %% executable: Identify the program that you want run by the "growl" notifications
        %% valid values: auto | notifu | 'notify-send' | growlnotify | emacsclient
        %% * auto = allow sync to autodetect which program to run
        %% * growlnotify = Use Growl for Mac
        %% * 'notify-send' = Use libnotify for Linux
        %% * notifu = The notifu program for Windows
        %% * emacsclient = Emacs notifications
        %% default: auto
        {executable, auto}
    ]},

    {apns, [
      {apple_host, undefined},
      {apple_port, 2195},
      {cert_file, undefined},
      {key_file, undefined},
      {cert_password, undefined},
      {timeout, 30000},
      {feedback_port, 2196},
      {feedback_host, undefined},
      {feedback_timeout, 18000000}
    ]}
    
].
