%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yamerl_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    53,
    true,
    [],
    0,
    54,
    8,
    1,
    false,
    7,
    14,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    18,
    17,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yamerl_stream_end,7,14},
      {yamerl_doc_end,7,14},
      {yamerl_collection_end,7,14,block,mapping},
      {yamerl_scalar,7,12,
        {yamerl_tag,7,12,{non_specific,"?"}},
        flow,plain,"20"},
      {yamerl_mapping_value,7,10},
      {yamerl_scalar,7,1,
        {yamerl_tag,7,1,{non_specific,"?"}},
        flow,plain,"matches %"},
      {yamerl_mapping_key,7,1},
      {yamerl_collection_start,7,1,
        {yamerl_tag,7,1,{non_specific,"?"}},
        block,mapping},
      {yamerl_doc_start,6,1,{1,2},_},
      {yamerl_yaml_directive,5,1,{1,2}},
      {yamerl_doc_end,4,1},
      {yamerl_scalar,4,1,
        {yamerl_tag,4,1,{non_specific,"?"}},
        flow,plain,[]},
      {yamerl_doc_start,2,1,{1,2},_},
      {yamerl_doc_end,2,1},
      {yamerl_scalar,1,1,
        {yamerl_tag,1,1,{non_specific,"?"}},
        flow,plain,"Document"},
      {yamerl_doc_start,1,1,{1,2},_},
      {yamerl_stream_start,1,1,utf8}
    ]
  },
  yamerl_parser:file("${FILENAME}")
)
