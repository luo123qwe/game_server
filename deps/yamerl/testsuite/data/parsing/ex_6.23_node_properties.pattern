%% vim:ft=erlang:

%% TEST
?_assertMatch(
  {yamerl_parser,
    {file,"${FILENAME}"},
    [],
    <<>>,
    43,
    true,
    [],
    0,
    44,
    4,
    1,
    false,
    3,
    14,
    utf8,
    false,
    undefined,
    _,
    _,
    [],
    {bcoll,root,0,-1,1,1,-1,1,1},
    false,
    false,
    false,
    [{impl_key,false,undefined,undefined,undefined,undefined,undefined}],
    false,
    false,
    _,
    [],
    0,
    19,
    16,
    undefined,
    undefined,
    _,
    false,
    [],
    [
      {yamerl_stream_end,3,14},
      {yamerl_doc_end,3,14},
      {yamerl_collection_end,3,14,block,mapping},
      {yamerl_alias,3,11,"a1"},
      {yamerl_mapping_value,3,9},
      {yamerl_scalar,3,5,
        {yamerl_tag,3,5,{non_specific,"?"}},
        flow,plain,"baz"},
      {yamerl_anchor,3,1,"a2"},
      {yamerl_mapping_key,3,1},
      {yamerl_scalar,2,9,
        {yamerl_tag,2,3,"tag:yaml.org,2002:str"},
        flow,plain,"bar"},
      {yamerl_mapping_value,1,16},
      {yamerl_scalar,1,11,
        {yamerl_tag,1,1,"tag:yaml.org,2002:str"},
        flow,double_quoted,"foo"},
      {yamerl_anchor,1,7,"a1"},
      {yamerl_mapping_key,1,1},
      {yamerl_collection_start,1,1,
        {yamerl_tag,1,1,{non_specific,"?"}},
        block,mapping},
      {yamerl_doc_start,1,1,{1,2},_},
      {yamerl_stream_start,1,1,utf8}
    ]
  },
  yamerl_parser:file("${FILENAME}")
)
